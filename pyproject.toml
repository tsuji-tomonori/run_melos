[project]
name = "run-melos"
readme = "README.md"

[tool.ruff]
select = [
    "F",   # Pyflakes
    "E",   # pycodestyle
    "W",   # pycodestyle
    "C90", # mccabe
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "ANN", # flake8-annotations
    "S",   # flake8-bandit
    "FBT", # flake8-boolean-trap
    "B",   # flake8-bugbear
    "A",   # flake8-builtins
    "COM", # flake8-commas
    "C4",  # flake8-comprehensions
    "FA",  # flake8-future-annotations
    "ISC", # flake8-implicit-str-concat
    "T20", # flake8-print
    "Q",   # flake8-quotes
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
    "ERA", # eradicate
    "PGH", # pygrep-hooks
    "PL",  # Pylint
    "TRY", # tryceratops
    "RUF", # Ruff-specific rules
]

ignore = [
    "S101",   # For None check in cdk
    "S311",   # suspicious-non-cryptographic-random-usage
    "ARG001", # lambda_handler
    "TRY400", # Use traceback.format_exc
    "E501",   # 実装のしやすさ重視
]

extend-exclude = [
    "cdk.out", # CDK synthesized cloud assembly
    "docs",    # documents directory
    ".layers", # lambda layer
]

[tool.ruff.per-file-ignores]
"tests/**.py" = [
    "ANN001",  # test fixtures
    "ANN201",  # Missing return type annotation
    "PLR2004", # magic-value-comparison
]

[tool.mypy]
python_version = "3.11"
# エラー時のメッセージを詳細表示
show_error_context = true
# エラー発生箇所の行数/列数を表示
show_column_numbers = true
# import 先のチェックを行わない (デフォルトだとサードパーティーライブラリまでチェックする)
ignore_missing_imports = true
# 関数定義の引数/戻り値に型アノテーション必須 (lambda_handler)
disallow_untyped_defs = false
# デフォルト引数に None を取る場合型アノテーションに Optional 必須
no_implicit_optional = true
# 戻り値が Any 型ではない関数の戻り値の型アノテーションが Any のとき警告
warn_return_any = true
# mypy エラーに該当しない箇所に `# type: ignore` コメントが付与されていたら警告
# ※ `# type: ignore` が付与されている箇所は mypy のエラーを無視出来る
warn_unused_ignores = true
# 冗長なキャストに警告
warn_redundant_casts = true
# https://stackoverflow.com/questions/69890410/mypy-daemon-dmypy-and-vscode-configuration-changed-error
ignore_missing_imports_per_module = true
exclude = [
    "cdk.out", # CDK synthesized cloud assembly
    "docs",    # documents directory
    ".layers", # lambda layer
]
